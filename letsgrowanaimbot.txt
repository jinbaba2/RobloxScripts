local scriptCode = [[
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

-- Configuration
local MAX_DISTANCE = 100 -- Maximum distance to detect targets (in studs)
local AIM_SMOOTHNESS = 0.1 -- Smoothing factor for camera movement (0 to 1)

-- Function to find the closest target
local function findClosestTarget()
    local closestPart = nil
    local closestDistance = MAX_DISTANCE
    local playerPos = LocalPlayer.Character and LocalPlayer.Character.HumanoidRootPart.Position

    if not playerPos then return nil end

    -- Loop through all parts in the workspace
    for _, part in pairs(workspace:GetDescendants()) do
        if part:IsA("BasePart") and part ~= LocalPlayer.Character.HumanoidRootPart then
            local distance = (part.Position - playerPos).Magnitude
            if distance < closestDistance then
                closestDistance = distance
                closestPart = part
            end
        end
    end
    return closestPart
end

-- Function to smoothly aim at a target
local function aimAtTarget(target)
    if not target then return end
    local targetPos = target.Position
    local cameraPos = Camera.CFrame.Position
    local direction = (targetPos - cameraPos).Unit
    local newCFrame = CFrame.new(cameraPos, cameraPos + direction * 100)
    Camera.CFrame = Camera.CFrame:Lerp(newCFrame, AIM_SMOOTHNESS)
end

-- Main loop
RunService.RenderStepped:Connect(function()
    if UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton2) then
        local target = findClosestTarget()
        aimAtTarget(target)
    end
end)
]]

-- Execute the script using loadstring
local success, result = pcall(function()
    return loadstring(scriptCode)()
end)

if not success then
    warn("Error loading script: " .. tostring(result))
end